package telegram

import (
	"ToDoBot1/pkg/storage"
	"fmt"
	"time"
)

// Text for /help and /start cmd
const (
	helpMsg  = "/add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n/close - –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏\n/delete - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É\n/uncompl - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n/compl - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏\n/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
	startMsg = "/help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"
)

// Text for output information about tasks
const (
	noUncomplTasksMsg = "–£ –≤–∞—Å –Ω–µ—Ç –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á."
	noComplTasksMsg   = "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á."
	UnComplTasksMsg   = "–°–ø–∏—Å–æ–∫ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:\n\n"
	ComplTasks        = "–°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:\n\n"
)

// Text for adding task
const (
	addingMsg            = "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ -> "
	incorrectTitleMsg    = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:"
	taskAlreadyExistMsg  = "–ó–∞–¥–∞—á–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:"
	successTitleSetMsg   = "–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.\n\n–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:"
	addingTitleMsg       = "–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:"
	successDescrSetMsg   = "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n\n\"–î–î-–ú–ú-–ì–ì–ì–ì –ß–ß:–ú–ú\":"
	incorrectDeadlineMsg = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n\n\"–î–î-–ú–ú-–ì–ì–ì–ì –ß–ß:–ú–ú\":"
	successDeadlineMsg   = "–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.\n\n/uncompl - –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á."
)

func makeTasksString(tasks []storage.Task) string {
	dateTimeFormat := "02-01-2006 15:04"

	var res string = ""
	for _, v := range tasks {
		titleString := fmt.Sprintf("üß∑ %s\n", v.Title)

		var statusString string
		if v.Done {
			statusString = fmt.Sprintf("‚úÖ %s\n", getDoneStatus(v.Done))
		} else {
			statusString = fmt.Sprintf("‚ùå %s\n", getDoneStatus(v.Done))
		}

		deadlineString := fmt.Sprintf("‚ùóÔ∏è –î–µ–¥–ª–∞–π–Ω: %s\n", time.Unix(int64(v.Deadline), 0).Format(dateTimeFormat))

		descrString := fmt.Sprintf("üóí –û–ø–∏—Å–∞–Ω–∏–µ: %s\n", v.Description)

		res += titleString + statusString + deadlineString + descrString + "\n"
	}

	return res
}

func getDoneStatus(status bool) string {
	if !status {
		return "–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ"
	} else {
		return "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
	}
}
